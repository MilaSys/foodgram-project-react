# Generated by Django 2.2.16 on 2023-03-19 13:33

from decimal import Decimal

import colorfield.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('recipes', '0002_auto_20230317_2033'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Введите название ингредиента.Используйте только кириллицу, цифры, дефисы и знаки подчёркивания.', max_length=200, verbose_name='Название')),
                ('measurement_unit', models.CharField(default='г', help_text='Введите единицу измерения для данного ингредиента.Используйте только цифры.', max_length=200, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default='1', help_text='Введите необходимое количество ингредиента.Разрешается использовать целые и десятичные положительные числа,в пределах от 0.01 до 9999.99.', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.01'), 'Количество ингредиентов не может быть меньше 0.01!'), django.core.validators.MaxValueValidator(Decimal('9999.99'), 'Количество ингредиентов не может быть больше 9999.99!')], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(help_text='Введите название ингредиента.Используйте только кириллицу, цифры, дефисы и знаки подчёркивания.', on_delete=django.db.models.deletion.CASCADE, related_name='amount_ingredient', to='recipes.Ingredient', verbose_name='Ингредиент')),
            ],
            options={
                'verbose_name': 'Количество ингредиентов',
                'verbose_name_plural': 'Количество ингредиентов',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название рецепта.Используйте только кириллицу, цифры, дефисы и знаки подчёркивания.', max_length=200, verbose_name='Название')),
                ('image', models.ImageField(blank=True, help_text='Здесь можно загрузить картинку, объёмом не более 5Мб', null=True, upload_to='static/recipe/', verbose_name='Изображение')),
                ('text', models.TextField(help_text='Опишите ваш творение.Используйте только кириллицу, цифры, дефисы и знаки подчёркивания.', verbose_name='Описание')),
                ('cooking_time', models.PositiveSmallIntegerField(default=1, help_text='Введите время необходимое для приготовления.', validators=[django.core.validators.MinValueValidator(1, 'Время приготовления не может быть меньше 1 минуты!')], verbose_name='Время приготовления')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания рецепта')),
                ('author', models.ForeignKey(help_text='Введите id автора рецепта.', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор публикации')),
                ('ingredients', models.ManyToManyField(help_text='Введите id ингредиентов, для приготовления блюда', related_name='recipes', through='recipes.IngredientAmount', to='recipes.Ingredient', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=colorfield.fields.ColorField(default='#FF0000', help_text='Введите цвет в HEX-формате.', image_field=None, max_length=18, samples=None, verbose_name='HEX-код'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(help_text='Введите название тэга.Используйте только кириллицу, цифры, дефисы и знаки подчёркивания.', max_length=200, unique=True, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=models.SlugField(help_text='Укажите уникальный адрес тэга.Используйте только латиницу, цифры, дефисы и знаки подчёркивания.', max_length=200, unique=True, verbose_name='Короткое название'),
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Введите Id рецепта который хотите добавить в корзину.', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='recipes.Recipe', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Списки покупок',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Введите id ассоциирующегося тега.', to='recipes.Tag', verbose_name='Тег'),
        ),
        migrations.AddField(
            model_name='ingredientamount',
            name='recipe',
            field=models.ForeignKey(help_text='Введите Id рецепта.', on_delete=django.db.models.deletion.CASCADE, related_name='amount_ingredient', to='recipes.Recipe', verbose_name='Рецепт'),
        ),
        migrations.CreateModel(
            name='FavoriteRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Введите Id любимого рецепта.', on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='recipes.Recipe', verbose_name='Избранный рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_list', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список избранного',
                'verbose_name_plural': 'Списки избранного',
            },
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_shopping_cart'),
        ),
        migrations.AddConstraint(
            model_name='ingredientamount',
            constraint=models.UniqueConstraint(fields=('recipe', 'ingredient'), name='unique_ingredient'),
        ),
        migrations.AddConstraint(
            model_name='favoriterecipe',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorites'),
        ),
    ]
